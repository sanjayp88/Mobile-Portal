//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExpensePortal.ExpensesServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoleData", Namespace="http://schemas.datacontract.org/2004/07/Interface")]
    [System.SerializableAttribute()]
    public partial class RoleData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((this.RoleIDField.Equals(value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResetPasswordData", Namespace="http://schemas.datacontract.org/2004/07/Interface")]
    [System.SerializableAttribute()]
    public partial class ResetPasswordData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeData", Namespace="http://schemas.datacontract.org/2004/07/Interface")]
    [System.SerializableAttribute()]
    public partial class EmployeeData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductPayrollData", Namespace="http://schemas.datacontract.org/2004/07/Interface")]
    [System.SerializableAttribute()]
    public partial class ProductPayrollData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayrollNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayrollNumber {
            get {
                return this.PayrollNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PayrollNumberField, value) != true)) {
                    this.PayrollNumberField = value;
                    this.RaisePropertyChanged("PayrollNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeProductData", Namespace="http://schemas.datacontract.org/2004/07/Interface")]
    [System.SerializableAttribute()]
    public partial class EmployeeProductData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpensePortal.ExpensesServiceReference.EmployeeData EmployeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.ProductPayrollData> ProductPayrollsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpensePortal.ExpensesServiceReference.EmployeeData Employee {
            get {
                return this.EmployeeField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeField, value) != true)) {
                    this.EmployeeField = value;
                    this.RaisePropertyChanged("Employee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.ProductPayrollData> ProductPayrolls {
            get {
                return this.ProductPayrollsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductPayrollsField, value) != true)) {
                    this.ProductPayrollsField = value;
                    this.RaisePropertyChanged("ProductPayrolls");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExpenditureData", Namespace="http://schemas.datacontract.org/2004/07/Interface")]
    [System.SerializableAttribute()]
    public partial class ExpenditureData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.ExpenditureDayData> DaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EditedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EditedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WeekField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateFrom {
            get {
                return this.DateFromField;
            }
            set {
                if ((this.DateFromField.Equals(value) != true)) {
                    this.DateFromField = value;
                    this.RaisePropertyChanged("DateFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTo {
            get {
                return this.DateToField;
            }
            set {
                if ((this.DateToField.Equals(value) != true)) {
                    this.DateToField = value;
                    this.RaisePropertyChanged("DateTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.ExpenditureDayData> Days {
            get {
                return this.DaysField;
            }
            set {
                if ((object.ReferenceEquals(this.DaysField, value) != true)) {
                    this.DaysField = value;
                    this.RaisePropertyChanged("Days");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Edited {
            get {
                return this.EditedField;
            }
            set {
                if ((this.EditedField.Equals(value) != true)) {
                    this.EditedField = value;
                    this.RaisePropertyChanged("Edited");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EditedBy {
            get {
                return this.EditedByField;
            }
            set {
                if ((object.ReferenceEquals(this.EditedByField, value) != true)) {
                    this.EditedByField = value;
                    this.RaisePropertyChanged("EditedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Week {
            get {
                return this.WeekField;
            }
            set {
                if ((this.WeekField.Equals(value) != true)) {
                    this.WeekField = value;
                    this.RaisePropertyChanged("Week");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExpenditureDayData", Namespace="http://schemas.datacontract.org/2004/07/Interface")]
    [System.SerializableAttribute()]
    public partial class ExpenditureDayData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ArriveHomeMinutesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DepartHomeMinutesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EditedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndPostcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpenditureDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FoodDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasReceiptsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsHomePostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MileageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PurchasedFoodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SitePostcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartPostcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SubsistenceAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TravelAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TravelModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UnableToGetReceiptsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool WorkedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ArriveHomeMinutes {
            get {
                return this.ArriveHomeMinutesField;
            }
            set {
                if ((this.ArriveHomeMinutesField.Equals(value) != true)) {
                    this.ArriveHomeMinutesField = value;
                    this.RaisePropertyChanged("ArriveHomeMinutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DepartHomeMinutes {
            get {
                return this.DepartHomeMinutesField;
            }
            set {
                if ((this.DepartHomeMinutesField.Equals(value) != true)) {
                    this.DepartHomeMinutesField = value;
                    this.RaisePropertyChanged("DepartHomeMinutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Edited {
            get {
                return this.EditedField;
            }
            set {
                if ((this.EditedField.Equals(value) != true)) {
                    this.EditedField = value;
                    this.RaisePropertyChanged("Edited");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndPostcode {
            get {
                return this.EndPostcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EndPostcodeField, value) != true)) {
                    this.EndPostcodeField = value;
                    this.RaisePropertyChanged("EndPostcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpenditureDate {
            get {
                return this.ExpenditureDateField;
            }
            set {
                if ((this.ExpenditureDateField.Equals(value) != true)) {
                    this.ExpenditureDateField = value;
                    this.RaisePropertyChanged("ExpenditureDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FoodDetail {
            get {
                return this.FoodDetailField;
            }
            set {
                if ((object.ReferenceEquals(this.FoodDetailField, value) != true)) {
                    this.FoodDetailField = value;
                    this.RaisePropertyChanged("FoodDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasReceipts {
            get {
                return this.HasReceiptsField;
            }
            set {
                if ((this.HasReceiptsField.Equals(value) != true)) {
                    this.HasReceiptsField = value;
                    this.RaisePropertyChanged("HasReceipts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsHomePostCode {
            get {
                return this.IsHomePostCodeField;
            }
            set {
                if ((this.IsHomePostCodeField.Equals(value) != true)) {
                    this.IsHomePostCodeField = value;
                    this.RaisePropertyChanged("IsHomePostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Mileage {
            get {
                return this.MileageField;
            }
            set {
                if ((this.MileageField.Equals(value) != true)) {
                    this.MileageField = value;
                    this.RaisePropertyChanged("Mileage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PurchasedFood {
            get {
                return this.PurchasedFoodField;
            }
            set {
                if ((this.PurchasedFoodField.Equals(value) != true)) {
                    this.PurchasedFoodField = value;
                    this.RaisePropertyChanged("PurchasedFood");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SitePostcode {
            get {
                return this.SitePostcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SitePostcodeField, value) != true)) {
                    this.SitePostcodeField = value;
                    this.RaisePropertyChanged("SitePostcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartPostcode {
            get {
                return this.StartPostcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StartPostcodeField, value) != true)) {
                    this.StartPostcodeField = value;
                    this.RaisePropertyChanged("StartPostcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SubsistenceAmount {
            get {
                return this.SubsistenceAmountField;
            }
            set {
                if ((this.SubsistenceAmountField.Equals(value) != true)) {
                    this.SubsistenceAmountField = value;
                    this.RaisePropertyChanged("SubsistenceAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TravelAmount {
            get {
                return this.TravelAmountField;
            }
            set {
                if ((this.TravelAmountField.Equals(value) != true)) {
                    this.TravelAmountField = value;
                    this.RaisePropertyChanged("TravelAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TravelMode {
            get {
                return this.TravelModeField;
            }
            set {
                if ((object.ReferenceEquals(this.TravelModeField, value) != true)) {
                    this.TravelModeField = value;
                    this.RaisePropertyChanged("TravelMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UnableToGetReceipts {
            get {
                return this.UnableToGetReceiptsField;
            }
            set {
                if ((this.UnableToGetReceiptsField.Equals(value) != true)) {
                    this.UnableToGetReceiptsField = value;
                    this.RaisePropertyChanged("UnableToGetReceipts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Worked {
            get {
                return this.WorkedField;
            }
            set {
                if ((this.WorkedField.Equals(value) != true)) {
                    this.WorkedField = value;
                    this.RaisePropertyChanged("Worked");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeProductExpenditureData", Namespace="http://schemas.datacontract.org/2004/07/Interface")]
    [System.SerializableAttribute()]
    public partial class EmployeeProductExpenditureData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpensePortal.ExpensesServiceReference.EmployeeData EmployeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.ProductExpenditureData> ProductExpendituresField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpensePortal.ExpensesServiceReference.EmployeeData Employee {
            get {
                return this.EmployeeField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeField, value) != true)) {
                    this.EmployeeField = value;
                    this.RaisePropertyChanged("Employee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.ProductExpenditureData> ProductExpenditures {
            get {
                return this.ProductExpendituresField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductExpendituresField, value) != true)) {
                    this.ProductExpendituresField = value;
                    this.RaisePropertyChanged("ProductExpenditures");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductExpenditureData", Namespace="http://schemas.datacontract.org/2004/07/Interface")]
    [System.SerializableAttribute()]
    public partial class ProductExpenditureData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.ExpenditureData> ExpendituresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpensePortal.ExpensesServiceReference.ProductPayrollData ProductPayrollField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.ExpenditureData> Expenditures {
            get {
                return this.ExpendituresField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpendituresField, value) != true)) {
                    this.ExpendituresField = value;
                    this.RaisePropertyChanged("Expenditures");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpensePortal.ExpensesServiceReference.ProductPayrollData ProductPayroll {
            get {
                return this.ProductPayrollField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductPayrollField, value) != true)) {
                    this.ProductPayrollField = value;
                    this.RaisePropertyChanged("ProductPayroll");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeProductAndRoleData", Namespace="http://schemas.datacontract.org/2004/07/Interface")]
    [System.SerializableAttribute()]
    public partial class EmployeeProductAndRoleData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpensePortal.ExpensesServiceReference.EmployeeData EmployeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.ProductPayrollData> ProductPayrollsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.RoleData> RolesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpensePortal.ExpensesServiceReference.EmployeeData Employee {
            get {
                return this.EmployeeField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeField, value) != true)) {
                    this.EmployeeField = value;
                    this.RaisePropertyChanged("Employee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.ProductPayrollData> ProductPayrolls {
            get {
                return this.ProductPayrollsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductPayrollsField, value) != true)) {
                    this.ProductPayrollsField = value;
                    this.RaisePropertyChanged("ProductPayrolls");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.RoleData> Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((object.ReferenceEquals(this.RolesField, value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductData", Namespace="http://schemas.datacontract.org/2004/07/Interface")]
    [System.SerializableAttribute()]
    public partial class ProductData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TravelModeData", Namespace="http://schemas.datacontract.org/2004/07/Interface")]
    [System.SerializableAttribute()]
    public partial class TravelModeData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TravelModeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TravelModeID {
            get {
                return this.TravelModeIDField;
            }
            set {
                if ((this.TravelModeIDField.Equals(value) != true)) {
                    this.TravelModeIDField = value;
                    this.RaisePropertyChanged("TravelModeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ExpensesServiceReference.IAuthorizationService")]
    public interface IAuthorizationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizationService/RegisterEmployee", ReplyAction="http://tempuri.org/IAuthorizationService/RegisterEmployeeResponse")]
        void RegisterEmployee(string userName, string password, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizationService/RegisterEmployee", ReplyAction="http://tempuri.org/IAuthorizationService/RegisterEmployeeResponse")]
        System.Threading.Tasks.Task RegisterEmployeeAsync(string userName, string password, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizationService/ResetEmployeePassword", ReplyAction="http://tempuri.org/IAuthorizationService/ResetEmployeePasswordResponse")]
        void ResetEmployeePassword(string userName, string password, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizationService/ResetEmployeePassword", ReplyAction="http://tempuri.org/IAuthorizationService/ResetEmployeePasswordResponse")]
        System.Threading.Tasks.Task ResetEmployeePasswordAsync(string userName, string password, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizationService/Login", ReplyAction="http://tempuri.org/IAuthorizationService/LoginResponse")]
        string Login(string userName, string password, string webClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizationService/Login", ReplyAction="http://tempuri.org/IAuthorizationService/LoginResponse")]
        System.Threading.Tasks.Task<string> LoginAsync(string userName, string password, string webClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizationService/Logout", ReplyAction="http://tempuri.org/IAuthorizationService/LogoutResponse")]
        void Logout(string userName, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizationService/Logout", ReplyAction="http://tempuri.org/IAuthorizationService/LogoutResponse")]
        System.Threading.Tasks.Task LogoutAsync(string userName, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizationService/CanAuthenticateWithToken", ReplyAction="http://tempuri.org/IAuthorizationService/CanAuthenticateWithTokenResponse")]
        bool CanAuthenticateWithToken(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizationService/CanAuthenticateWithToken", ReplyAction="http://tempuri.org/IAuthorizationService/CanAuthenticateWithTokenResponse")]
        System.Threading.Tasks.Task<bool> CanAuthenticateWithTokenAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizationService/AddRoleToEmployee", ReplyAction="http://tempuri.org/IAuthorizationService/AddRoleToEmployeeResponse")]
        void AddRoleToEmployee(string userName, string role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizationService/AddRoleToEmployee", ReplyAction="http://tempuri.org/IAuthorizationService/AddRoleToEmployeeResponse")]
        System.Threading.Tasks.Task AddRoleToEmployeeAsync(string userName, string role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizationService/RemoveRoleFromEmployee", ReplyAction="http://tempuri.org/IAuthorizationService/RemoveRoleFromEmployeeResponse")]
        void RemoveRoleFromEmployee(string userName, string role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizationService/RemoveRoleFromEmployee", ReplyAction="http://tempuri.org/IAuthorizationService/RemoveRoleFromEmployeeResponse")]
        System.Threading.Tasks.Task RemoveRoleFromEmployeeAsync(string userName, string role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizationService/IsExistingEmployeeRole", ReplyAction="http://tempuri.org/IAuthorizationService/IsExistingEmployeeRoleResponse")]
        bool IsExistingEmployeeRole(string userName, string role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizationService/IsExistingEmployeeRole", ReplyAction="http://tempuri.org/IAuthorizationService/IsExistingEmployeeRoleResponse")]
        System.Threading.Tasks.Task<bool> IsExistingEmployeeRoleAsync(string userName, string role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizationService/GetRoles", ReplyAction="http://tempuri.org/IAuthorizationService/GetRolesResponse")]
        System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.RoleData> GetRoles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizationService/GetRoles", ReplyAction="http://tempuri.org/IAuthorizationService/GetRolesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.RoleData>> GetRolesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizationService/GetResetPasswordData", ReplyAction="http://tempuri.org/IAuthorizationService/GetResetPasswordDataResponse")]
        ExpensePortal.ExpensesServiceReference.ResetPasswordData GetResetPasswordData(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizationService/GetResetPasswordData", ReplyAction="http://tempuri.org/IAuthorizationService/GetResetPasswordDataResponse")]
        System.Threading.Tasks.Task<ExpensePortal.ExpensesServiceReference.ResetPasswordData> GetResetPasswordDataAsync(string userName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthorizationServiceChannel : ExpensePortal.ExpensesServiceReference.IAuthorizationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthorizationServiceClient : System.ServiceModel.ClientBase<ExpensePortal.ExpensesServiceReference.IAuthorizationService>, ExpensePortal.ExpensesServiceReference.IAuthorizationService {
        
        public AuthorizationServiceClient() {
        }
        
        public AuthorizationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthorizationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthorizationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthorizationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void RegisterEmployee(string userName, string password, string token) {
            base.Channel.RegisterEmployee(userName, password, token);
        }
        
        public System.Threading.Tasks.Task RegisterEmployeeAsync(string userName, string password, string token) {
            return base.Channel.RegisterEmployeeAsync(userName, password, token);
        }
        
        public void ResetEmployeePassword(string userName, string password, string token) {
            base.Channel.ResetEmployeePassword(userName, password, token);
        }
        
        public System.Threading.Tasks.Task ResetEmployeePasswordAsync(string userName, string password, string token) {
            return base.Channel.ResetEmployeePasswordAsync(userName, password, token);
        }
        
        public string Login(string userName, string password, string webClient) {
            return base.Channel.Login(userName, password, webClient);
        }
        
        public System.Threading.Tasks.Task<string> LoginAsync(string userName, string password, string webClient) {
            return base.Channel.LoginAsync(userName, password, webClient);
        }
        
        public void Logout(string userName, string token) {
            base.Channel.Logout(userName, token);
        }
        
        public System.Threading.Tasks.Task LogoutAsync(string userName, string token) {
            return base.Channel.LogoutAsync(userName, token);
        }
        
        public bool CanAuthenticateWithToken(string token) {
            return base.Channel.CanAuthenticateWithToken(token);
        }
        
        public System.Threading.Tasks.Task<bool> CanAuthenticateWithTokenAsync(string token) {
            return base.Channel.CanAuthenticateWithTokenAsync(token);
        }
        
        public void AddRoleToEmployee(string userName, string role) {
            base.Channel.AddRoleToEmployee(userName, role);
        }
        
        public System.Threading.Tasks.Task AddRoleToEmployeeAsync(string userName, string role) {
            return base.Channel.AddRoleToEmployeeAsync(userName, role);
        }
        
        public void RemoveRoleFromEmployee(string userName, string role) {
            base.Channel.RemoveRoleFromEmployee(userName, role);
        }
        
        public System.Threading.Tasks.Task RemoveRoleFromEmployeeAsync(string userName, string role) {
            return base.Channel.RemoveRoleFromEmployeeAsync(userName, role);
        }
        
        public bool IsExistingEmployeeRole(string userName, string role) {
            return base.Channel.IsExistingEmployeeRole(userName, role);
        }
        
        public System.Threading.Tasks.Task<bool> IsExistingEmployeeRoleAsync(string userName, string role) {
            return base.Channel.IsExistingEmployeeRoleAsync(userName, role);
        }
        
        public System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.RoleData> GetRoles() {
            return base.Channel.GetRoles();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.RoleData>> GetRolesAsync() {
            return base.Channel.GetRolesAsync();
        }
        
        public ExpensePortal.ExpensesServiceReference.ResetPasswordData GetResetPasswordData(string userName) {
            return base.Channel.GetResetPasswordData(userName);
        }
        
        public System.Threading.Tasks.Task<ExpensePortal.ExpensesServiceReference.ResetPasswordData> GetResetPasswordDataAsync(string userName) {
            return base.Channel.GetResetPasswordDataAsync(userName);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ExpensesServiceReference.IBusinessService")]
    public interface IBusinessService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessService/GetWelcomePasswordToken", ReplyAction="http://tempuri.org/IBusinessService/GetWelcomePasswordTokenResponse")]
        string GetWelcomePasswordToken(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessService/GetWelcomePasswordToken", ReplyAction="http://tempuri.org/IBusinessService/GetWelcomePasswordTokenResponse")]
        System.Threading.Tasks.Task<string> GetWelcomePasswordTokenAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessService/PersistEmployee", ReplyAction="http://tempuri.org/IBusinessService/PersistEmployeeResponse")]
        ExpensePortal.ExpensesServiceReference.EmployeeData PersistEmployee(ExpensePortal.ExpensesServiceReference.EmployeeData employeeData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessService/PersistEmployee", ReplyAction="http://tempuri.org/IBusinessService/PersistEmployeeResponse")]
        System.Threading.Tasks.Task<ExpensePortal.ExpensesServiceReference.EmployeeData> PersistEmployeeAsync(ExpensePortal.ExpensesServiceReference.EmployeeData employeeData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessService/AssignEmployeeToProduct", ReplyAction="http://tempuri.org/IBusinessService/AssignEmployeeToProductResponse")]
        ExpensePortal.ExpensesServiceReference.EmployeeProductData AssignEmployeeToProduct(ExpensePortal.ExpensesServiceReference.EmployeeData employeeData, ExpensePortal.ExpensesServiceReference.ProductPayrollData productPayroll);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessService/AssignEmployeeToProduct", ReplyAction="http://tempuri.org/IBusinessService/AssignEmployeeToProductResponse")]
        System.Threading.Tasks.Task<ExpensePortal.ExpensesServiceReference.EmployeeProductData> AssignEmployeeToProductAsync(ExpensePortal.ExpensesServiceReference.EmployeeData employeeData, ExpensePortal.ExpensesServiceReference.ProductPayrollData productPayroll);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessService/PersistExpenditure", ReplyAction="http://tempuri.org/IBusinessService/PersistExpenditureResponse")]
        ExpensePortal.ExpensesServiceReference.ExpenditureData PersistExpenditure(ExpensePortal.ExpensesServiceReference.ExpenditureData expenditureData, ExpensePortal.ExpensesServiceReference.ProductPayrollData productPayroll);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessService/PersistExpenditure", ReplyAction="http://tempuri.org/IBusinessService/PersistExpenditureResponse")]
        System.Threading.Tasks.Task<ExpensePortal.ExpensesServiceReference.ExpenditureData> PersistExpenditureAsync(ExpensePortal.ExpensesServiceReference.ExpenditureData expenditureData, ExpensePortal.ExpensesServiceReference.ProductPayrollData productPayroll);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessService/ConfirmExpenditure", ReplyAction="http://tempuri.org/IBusinessService/ConfirmExpenditureResponse")]
        void ConfirmExpenditure(ExpensePortal.ExpensesServiceReference.ExpenditureData expenditureData, ExpensePortal.ExpensesServiceReference.ProductPayrollData productPayroll);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessService/ConfirmExpenditure", ReplyAction="http://tempuri.org/IBusinessService/ConfirmExpenditureResponse")]
        System.Threading.Tasks.Task ConfirmExpenditureAsync(ExpensePortal.ExpensesServiceReference.ExpenditureData expenditureData, ExpensePortal.ExpensesServiceReference.ProductPayrollData productPayroll);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessService/InvalidateExpenditure", ReplyAction="http://tempuri.org/IBusinessService/InvalidateExpenditureResponse")]
        void InvalidateExpenditure(ExpensePortal.ExpensesServiceReference.ExpenditureData expenditureData, ExpensePortal.ExpensesServiceReference.ProductPayrollData productPayroll);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessService/InvalidateExpenditure", ReplyAction="http://tempuri.org/IBusinessService/InvalidateExpenditureResponse")]
        System.Threading.Tasks.Task InvalidateExpenditureAsync(ExpensePortal.ExpensesServiceReference.ExpenditureData expenditureData, ExpensePortal.ExpensesServiceReference.ProductPayrollData productPayroll);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessService/GetExpendituresByPayroll", ReplyAction="http://tempuri.org/IBusinessService/GetExpendituresByPayrollResponse")]
        System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.EmployeeProductExpenditureData> GetExpendituresByPayroll(System.Nullable<System.DateTime> dateFrom, System.Nullable<System.DateTime> dateTo, System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.ProductPayrollData> productPayrolls);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessService/GetExpendituresByPayroll", ReplyAction="http://tempuri.org/IBusinessService/GetExpendituresByPayrollResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.EmployeeProductExpenditureData>> GetExpendituresByPayrollAsync(System.Nullable<System.DateTime> dateFrom, System.Nullable<System.DateTime> dateTo, System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.ProductPayrollData> productPayrolls);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessService/GetEmployeeProducts", ReplyAction="http://tempuri.org/IBusinessService/GetEmployeeProductsResponse")]
        System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.EmployeeProductData> GetEmployeeProducts(System.Collections.Generic.List<string> productNames, System.Collections.Generic.List<string> userNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessService/GetEmployeeProducts", ReplyAction="http://tempuri.org/IBusinessService/GetEmployeeProductsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.EmployeeProductData>> GetEmployeeProductsAsync(System.Collections.Generic.List<string> productNames, System.Collections.Generic.List<string> userNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessService/GetEmployeeProductsAndRoles", ReplyAction="http://tempuri.org/IBusinessService/GetEmployeeProductsAndRolesResponse")]
        System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.EmployeeProductAndRoleData> GetEmployeeProductsAndRoles(System.Collections.Generic.List<string> productNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessService/GetEmployeeProductsAndRoles", ReplyAction="http://tempuri.org/IBusinessService/GetEmployeeProductsAndRolesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.EmployeeProductAndRoleData>> GetEmployeeProductsAndRolesAsync(System.Collections.Generic.List<string> productNames);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessService/GetProducts", ReplyAction="http://tempuri.org/IBusinessService/GetProductsResponse")]
        System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.ProductData> GetProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessService/GetProducts", ReplyAction="http://tempuri.org/IBusinessService/GetProductsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.ProductData>> GetProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessService/GetTravelModes", ReplyAction="http://tempuri.org/IBusinessService/GetTravelModesResponse")]
        System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.TravelModeData> GetTravelModes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessService/GetTravelModes", ReplyAction="http://tempuri.org/IBusinessService/GetTravelModesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.TravelModeData>> GetTravelModesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessService/GetEmployeeByPayrollProduct", ReplyAction="http://tempuri.org/IBusinessService/GetEmployeeByPayrollProductResponse")]
        ExpensePortal.ExpensesServiceReference.EmployeeData GetEmployeeByPayrollProduct(ExpensePortal.ExpensesServiceReference.ProductPayrollData productPayrollData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessService/GetEmployeeByPayrollProduct", ReplyAction="http://tempuri.org/IBusinessService/GetEmployeeByPayrollProductResponse")]
        System.Threading.Tasks.Task<ExpensePortal.ExpensesServiceReference.EmployeeData> GetEmployeeByPayrollProductAsync(ExpensePortal.ExpensesServiceReference.ProductPayrollData productPayrollData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessService/EmailExists", ReplyAction="http://tempuri.org/IBusinessService/EmailExistsResponse")]
        bool EmailExists(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBusinessService/EmailExists", ReplyAction="http://tempuri.org/IBusinessService/EmailExistsResponse")]
        System.Threading.Tasks.Task<bool> EmailExistsAsync(string email);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBusinessServiceChannel : ExpensePortal.ExpensesServiceReference.IBusinessService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BusinessServiceClient : System.ServiceModel.ClientBase<ExpensePortal.ExpensesServiceReference.IBusinessService>, ExpensePortal.ExpensesServiceReference.IBusinessService {
        
        public BusinessServiceClient() {
        }
        
        public BusinessServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BusinessServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BusinessServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BusinessServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetWelcomePasswordToken(string userName) {
            return base.Channel.GetWelcomePasswordToken(userName);
        }
        
        public System.Threading.Tasks.Task<string> GetWelcomePasswordTokenAsync(string userName) {
            return base.Channel.GetWelcomePasswordTokenAsync(userName);
        }
        
        public ExpensePortal.ExpensesServiceReference.EmployeeData PersistEmployee(ExpensePortal.ExpensesServiceReference.EmployeeData employeeData) {
            return base.Channel.PersistEmployee(employeeData);
        }
        
        public System.Threading.Tasks.Task<ExpensePortal.ExpensesServiceReference.EmployeeData> PersistEmployeeAsync(ExpensePortal.ExpensesServiceReference.EmployeeData employeeData) {
            return base.Channel.PersistEmployeeAsync(employeeData);
        }
        
        public ExpensePortal.ExpensesServiceReference.EmployeeProductData AssignEmployeeToProduct(ExpensePortal.ExpensesServiceReference.EmployeeData employeeData, ExpensePortal.ExpensesServiceReference.ProductPayrollData productPayroll) {
            return base.Channel.AssignEmployeeToProduct(employeeData, productPayroll);
        }
        
        public System.Threading.Tasks.Task<ExpensePortal.ExpensesServiceReference.EmployeeProductData> AssignEmployeeToProductAsync(ExpensePortal.ExpensesServiceReference.EmployeeData employeeData, ExpensePortal.ExpensesServiceReference.ProductPayrollData productPayroll) {
            return base.Channel.AssignEmployeeToProductAsync(employeeData, productPayroll);
        }
        
        public ExpensePortal.ExpensesServiceReference.ExpenditureData PersistExpenditure(ExpensePortal.ExpensesServiceReference.ExpenditureData expenditureData, ExpensePortal.ExpensesServiceReference.ProductPayrollData productPayroll) {
            return base.Channel.PersistExpenditure(expenditureData, productPayroll);
        }
        
        public System.Threading.Tasks.Task<ExpensePortal.ExpensesServiceReference.ExpenditureData> PersistExpenditureAsync(ExpensePortal.ExpensesServiceReference.ExpenditureData expenditureData, ExpensePortal.ExpensesServiceReference.ProductPayrollData productPayroll) {
            return base.Channel.PersistExpenditureAsync(expenditureData, productPayroll);
        }
        
        public void ConfirmExpenditure(ExpensePortal.ExpensesServiceReference.ExpenditureData expenditureData, ExpensePortal.ExpensesServiceReference.ProductPayrollData productPayroll) {
            base.Channel.ConfirmExpenditure(expenditureData, productPayroll);
        }
        
        public System.Threading.Tasks.Task ConfirmExpenditureAsync(ExpensePortal.ExpensesServiceReference.ExpenditureData expenditureData, ExpensePortal.ExpensesServiceReference.ProductPayrollData productPayroll) {
            return base.Channel.ConfirmExpenditureAsync(expenditureData, productPayroll);
        }
        
        public void InvalidateExpenditure(ExpensePortal.ExpensesServiceReference.ExpenditureData expenditureData, ExpensePortal.ExpensesServiceReference.ProductPayrollData productPayroll) {
            base.Channel.InvalidateExpenditure(expenditureData, productPayroll);
        }
        
        public System.Threading.Tasks.Task InvalidateExpenditureAsync(ExpensePortal.ExpensesServiceReference.ExpenditureData expenditureData, ExpensePortal.ExpensesServiceReference.ProductPayrollData productPayroll) {
            return base.Channel.InvalidateExpenditureAsync(expenditureData, productPayroll);
        }
        
        public System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.EmployeeProductExpenditureData> GetExpendituresByPayroll(System.Nullable<System.DateTime> dateFrom, System.Nullable<System.DateTime> dateTo, System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.ProductPayrollData> productPayrolls) {
            return base.Channel.GetExpendituresByPayroll(dateFrom, dateTo, productPayrolls);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.EmployeeProductExpenditureData>> GetExpendituresByPayrollAsync(System.Nullable<System.DateTime> dateFrom, System.Nullable<System.DateTime> dateTo, System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.ProductPayrollData> productPayrolls) {
            return base.Channel.GetExpendituresByPayrollAsync(dateFrom, dateTo, productPayrolls);
        }
        
        public System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.EmployeeProductData> GetEmployeeProducts(System.Collections.Generic.List<string> productNames, System.Collections.Generic.List<string> userNames) {
            return base.Channel.GetEmployeeProducts(productNames, userNames);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.EmployeeProductData>> GetEmployeeProductsAsync(System.Collections.Generic.List<string> productNames, System.Collections.Generic.List<string> userNames) {
            return base.Channel.GetEmployeeProductsAsync(productNames, userNames);
        }
        
        public System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.EmployeeProductAndRoleData> GetEmployeeProductsAndRoles(System.Collections.Generic.List<string> productNames) {
            return base.Channel.GetEmployeeProductsAndRoles(productNames);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.EmployeeProductAndRoleData>> GetEmployeeProductsAndRolesAsync(System.Collections.Generic.List<string> productNames) {
            return base.Channel.GetEmployeeProductsAndRolesAsync(productNames);
        }
        
        public System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.ProductData> GetProducts() {
            return base.Channel.GetProducts();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.ProductData>> GetProductsAsync() {
            return base.Channel.GetProductsAsync();
        }
        
        public System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.TravelModeData> GetTravelModes() {
            return base.Channel.GetTravelModes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ExpensePortal.ExpensesServiceReference.TravelModeData>> GetTravelModesAsync() {
            return base.Channel.GetTravelModesAsync();
        }
        
        public ExpensePortal.ExpensesServiceReference.EmployeeData GetEmployeeByPayrollProduct(ExpensePortal.ExpensesServiceReference.ProductPayrollData productPayrollData) {
            return base.Channel.GetEmployeeByPayrollProduct(productPayrollData);
        }
        
        public System.Threading.Tasks.Task<ExpensePortal.ExpensesServiceReference.EmployeeData> GetEmployeeByPayrollProductAsync(ExpensePortal.ExpensesServiceReference.ProductPayrollData productPayrollData) {
            return base.Channel.GetEmployeeByPayrollProductAsync(productPayrollData);
        }
        
        public bool EmailExists(string email) {
            return base.Channel.EmailExists(email);
        }
        
        public System.Threading.Tasks.Task<bool> EmailExistsAsync(string email) {
            return base.Channel.EmailExistsAsync(email);
        }
    }
}
