//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExpensePortal.PayrollOneServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Company", Namespace="http://schemas.datacontract.org/2004/07/PayrollOneService.API")]
    [System.SerializableAttribute()]
    public partial class Company : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankAccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankSortCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceLogoFileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMyPSUField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OmbrosDBDatabaseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OmbrosDBPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OmbrosDBServerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OmbrosDBUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentFileTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SendPortalEmailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SmsSenderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TraderFileSharePathField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address3 {
            get {
                return this.Address3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address3Field, value) != true)) {
                    this.Address3Field = value;
                    this.RaisePropertyChanged("Address3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address4 {
            get {
                return this.Address4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address4Field, value) != true)) {
                    this.Address4Field = value;
                    this.RaisePropertyChanged("Address4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationMode {
            get {
                return this.ApplicationModeField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationModeField, value) != true)) {
                    this.ApplicationModeField = value;
                    this.RaisePropertyChanged("ApplicationMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankAccountNumber {
            get {
                return this.BankAccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BankAccountNumberField, value) != true)) {
                    this.BankAccountNumberField = value;
                    this.RaisePropertyChanged("BankAccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankReference {
            get {
                return this.BankReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.BankReferenceField, value) != true)) {
                    this.BankReferenceField = value;
                    this.RaisePropertyChanged("BankReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankSortCode {
            get {
                return this.BankSortCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BankSortCodeField, value) != true)) {
                    this.BankSortCodeField = value;
                    this.RaisePropertyChanged("BankSortCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyKey {
            get {
                return this.CompanyKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyKeyField, value) != true)) {
                    this.CompanyKeyField = value;
                    this.RaisePropertyChanged("CompanyKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvoiceLogoFileName {
            get {
                return this.InvoiceLogoFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceLogoFileNameField, value) != true)) {
                    this.InvoiceLogoFileNameField = value;
                    this.RaisePropertyChanged("InvoiceLogoFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMyPSU {
            get {
                return this.IsMyPSUField;
            }
            set {
                if ((this.IsMyPSUField.Equals(value) != true)) {
                    this.IsMyPSUField = value;
                    this.RaisePropertyChanged("IsMyPSU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OmbrosDBDatabaseName {
            get {
                return this.OmbrosDBDatabaseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OmbrosDBDatabaseNameField, value) != true)) {
                    this.OmbrosDBDatabaseNameField = value;
                    this.RaisePropertyChanged("OmbrosDBDatabaseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OmbrosDBPassword {
            get {
                return this.OmbrosDBPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.OmbrosDBPasswordField, value) != true)) {
                    this.OmbrosDBPasswordField = value;
                    this.RaisePropertyChanged("OmbrosDBPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OmbrosDBServer {
            get {
                return this.OmbrosDBServerField;
            }
            set {
                if ((object.ReferenceEquals(this.OmbrosDBServerField, value) != true)) {
                    this.OmbrosDBServerField = value;
                    this.RaisePropertyChanged("OmbrosDBServer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OmbrosDBUserName {
            get {
                return this.OmbrosDBUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OmbrosDBUserNameField, value) != true)) {
                    this.OmbrosDBUserNameField = value;
                    this.RaisePropertyChanged("OmbrosDBUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentFileType {
            get {
                return this.PaymentFileTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentFileTypeField, value) != true)) {
                    this.PaymentFileTypeField = value;
                    this.RaisePropertyChanged("PaymentFileType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Postcode {
            get {
                return this.PostcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostcodeField, value) != true)) {
                    this.PostcodeField = value;
                    this.RaisePropertyChanged("Postcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SendPortalEmails {
            get {
                return this.SendPortalEmailsField;
            }
            set {
                if ((this.SendPortalEmailsField.Equals(value) != true)) {
                    this.SendPortalEmailsField = value;
                    this.RaisePropertyChanged("SendPortalEmails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SmsSenderId {
            get {
                return this.SmsSenderIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SmsSenderIdField, value) != true)) {
                    this.SmsSenderIdField = value;
                    this.RaisePropertyChanged("SmsSenderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TraderFileSharePath {
            get {
                return this.TraderFileSharePathField;
            }
            set {
                if ((object.ReferenceEquals(this.TraderFileSharePathField, value) != true)) {
                    this.TraderFileSharePathField = value;
                    this.RaisePropertyChanged("TraderFileSharePath");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Payroll", Namespace="http://schemas.datacontract.org/2004/07/PayrollOneService.API")]
    [System.SerializableAttribute()]
    public partial class Payroll : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FrequencyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Frequency {
            get {
                return this.FrequencyField;
            }
            set {
                if ((object.ReferenceEquals(this.FrequencyField, value) != true)) {
                    this.FrequencyField = value;
                    this.RaisePropertyChanged("Frequency");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/PayrollOneService.API")]
    [System.SerializableAttribute()]
    public partial class Employee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgencyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankAccountNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankAccountNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankSortCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpensePortal.PayrollOneServiceReference.Company CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DOB_ISO8601Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeCompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LandLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LeavingDate_ISO8601Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double NICGrossTDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NICategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NiNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double P45GrossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double P45TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpensePortal.PayrollOneServiceReference.PayFrequency PayFrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PayrollDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RDSKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartDate_ISO8601Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TaxableGrossTDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalGrossTDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalTaxTDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Week1BasisField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address3 {
            get {
                return this.Address3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address3Field, value) != true)) {
                    this.Address3Field = value;
                    this.RaisePropertyChanged("Address3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address4 {
            get {
                return this.Address4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address4Field, value) != true)) {
                    this.Address4Field = value;
                    this.RaisePropertyChanged("Address4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgencyId {
            get {
                return this.AgencyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AgencyIdField, value) != true)) {
                    this.AgencyIdField = value;
                    this.RaisePropertyChanged("AgencyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankAccountName {
            get {
                return this.BankAccountNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BankAccountNameField, value) != true)) {
                    this.BankAccountNameField = value;
                    this.RaisePropertyChanged("BankAccountName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankAccountNumber {
            get {
                return this.BankAccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BankAccountNumberField, value) != true)) {
                    this.BankAccountNumberField = value;
                    this.RaisePropertyChanged("BankAccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankName {
            get {
                return this.BankNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BankNameField, value) != true)) {
                    this.BankNameField = value;
                    this.RaisePropertyChanged("BankName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankSortCode {
            get {
                return this.BankSortCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BankSortCodeField, value) != true)) {
                    this.BankSortCodeField = value;
                    this.RaisePropertyChanged("BankSortCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpensePortal.PayrollOneServiceReference.Company Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DOB_ISO8601 {
            get {
                return this.DOB_ISO8601Field;
            }
            set {
                if ((object.ReferenceEquals(this.DOB_ISO8601Field, value) != true)) {
                    this.DOB_ISO8601Field = value;
                    this.RaisePropertyChanged("DOB_ISO8601");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeCompanyName {
            get {
                return this.EmployeeCompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeCompanyNameField, value) != true)) {
                    this.EmployeeCompanyNameField = value;
                    this.RaisePropertyChanged("EmployeeCompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LandLine {
            get {
                return this.LandLineField;
            }
            set {
                if ((object.ReferenceEquals(this.LandLineField, value) != true)) {
                    this.LandLineField = value;
                    this.RaisePropertyChanged("LandLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LeavingDate_ISO8601 {
            get {
                return this.LeavingDate_ISO8601Field;
            }
            set {
                if ((object.ReferenceEquals(this.LeavingDate_ISO8601Field, value) != true)) {
                    this.LeavingDate_ISO8601Field = value;
                    this.RaisePropertyChanged("LeavingDate_ISO8601");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double NICGrossTD {
            get {
                return this.NICGrossTDField;
            }
            set {
                if ((this.NICGrossTDField.Equals(value) != true)) {
                    this.NICGrossTDField = value;
                    this.RaisePropertyChanged("NICGrossTD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NICategory {
            get {
                return this.NICategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.NICategoryField, value) != true)) {
                    this.NICategoryField = value;
                    this.RaisePropertyChanged("NICategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NiNumber {
            get {
                return this.NiNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NiNumberField, value) != true)) {
                    this.NiNumberField = value;
                    this.RaisePropertyChanged("NiNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double P45Gross {
            get {
                return this.P45GrossField;
            }
            set {
                if ((this.P45GrossField.Equals(value) != true)) {
                    this.P45GrossField = value;
                    this.RaisePropertyChanged("P45Gross");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double P45Tax {
            get {
                return this.P45TaxField;
            }
            set {
                if ((this.P45TaxField.Equals(value) != true)) {
                    this.P45TaxField = value;
                    this.RaisePropertyChanged("P45Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpensePortal.PayrollOneServiceReference.PayFrequency PayFrequency {
            get {
                return this.PayFrequencyField;
            }
            set {
                if ((this.PayFrequencyField.Equals(value) != true)) {
                    this.PayFrequencyField = value;
                    this.RaisePropertyChanged("PayFrequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayrollDescription {
            get {
                return this.PayrollDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PayrollDescriptionField, value) != true)) {
                    this.PayrollDescriptionField = value;
                    this.RaisePropertyChanged("PayrollDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostCode {
            get {
                return this.PostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostCodeField, value) != true)) {
                    this.PostCodeField = value;
                    this.RaisePropertyChanged("PostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RDSKey {
            get {
                return this.RDSKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.RDSKeyField, value) != true)) {
                    this.RDSKeyField = value;
                    this.RaisePropertyChanged("RDSKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartDate_ISO8601 {
            get {
                return this.StartDate_ISO8601Field;
            }
            set {
                if ((object.ReferenceEquals(this.StartDate_ISO8601Field, value) != true)) {
                    this.StartDate_ISO8601Field = value;
                    this.RaisePropertyChanged("StartDate_ISO8601");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCode {
            get {
                return this.TaxCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeField, value) != true)) {
                    this.TaxCodeField = value;
                    this.RaisePropertyChanged("TaxCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TaxableGrossTD {
            get {
                return this.TaxableGrossTDField;
            }
            set {
                if ((this.TaxableGrossTDField.Equals(value) != true)) {
                    this.TaxableGrossTDField = value;
                    this.RaisePropertyChanged("TaxableGrossTD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalGrossTD {
            get {
                return this.TotalGrossTDField;
            }
            set {
                if ((this.TotalGrossTDField.Equals(value) != true)) {
                    this.TotalGrossTDField = value;
                    this.RaisePropertyChanged("TotalGrossTD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalTaxTD {
            get {
                return this.TotalTaxTDField;
            }
            set {
                if ((this.TotalTaxTDField.Equals(value) != true)) {
                    this.TotalTaxTDField = value;
                    this.RaisePropertyChanged("TotalTaxTD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Week1Basis {
            get {
                return this.Week1BasisField;
            }
            set {
                if ((this.Week1BasisField.Equals(value) != true)) {
                    this.Week1BasisField = value;
                    this.RaisePropertyChanged("Week1Basis");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PayFrequency", Namespace="http://schemas.datacontract.org/2004/07/PayrollOneService.API")]
    public enum PayFrequency : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Weekly = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Monthly = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Fortnightly = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeValidation", Namespace="http://schemas.datacontract.org/2004/07/PayrollOneService.API")]
    [System.SerializableAttribute()]
    public partial class EmployeeValidation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpensePortal.PayrollOneServiceReference.Employee CandidateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpensePortal.PayrollOneServiceReference.Employee RecordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidationMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpensePortal.PayrollOneServiceReference.Employee Candidate {
            get {
                return this.CandidateField;
            }
            set {
                if ((object.ReferenceEquals(this.CandidateField, value) != true)) {
                    this.CandidateField = value;
                    this.RaisePropertyChanged("Candidate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpensePortal.PayrollOneServiceReference.Employee Record {
            get {
                return this.RecordField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordField, value) != true)) {
                    this.RecordField = value;
                    this.RaisePropertyChanged("Record");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((this.ValidField.Equals(value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidationMessage {
            get {
                return this.ValidationMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidationMessageField, value) != true)) {
                    this.ValidationMessageField = value;
                    this.RaisePropertyChanged("ValidationMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeCompanyId", Namespace="http://schemas.datacontract.org/2004/07/PayrollOneService.API")]
    [System.SerializableAttribute()]
    public partial class EmployeeCompanyId : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpensePortal.PayrollOneServiceReference.Company CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpensePortal.PayrollOneServiceReference.Company Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeId {
            get {
                return this.EmployeeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeIdField, value) != true)) {
                    this.EmployeeIdField = value;
                    this.RaisePropertyChanged("EmployeeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GrossPaymentLine", Namespace="http://schemas.datacontract.org/2004/07/PayrollOneService.API")]
    [System.SerializableAttribute()]
    public partial class GrossPaymentLine : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpensePortal.PayrollOneServiceReference.EmployeeCompanyId EmployeeCompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double NonTaxablePayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpensePortal.PayrollOneServiceReference.PayFrequency PayFrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TaxablePayField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpensePortal.PayrollOneServiceReference.EmployeeCompanyId EmployeeCompanyId {
            get {
                return this.EmployeeCompanyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeCompanyIdField, value) != true)) {
                    this.EmployeeCompanyIdField = value;
                    this.RaisePropertyChanged("EmployeeCompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double NonTaxablePay {
            get {
                return this.NonTaxablePayField;
            }
            set {
                if ((this.NonTaxablePayField.Equals(value) != true)) {
                    this.NonTaxablePayField = value;
                    this.RaisePropertyChanged("NonTaxablePay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpensePortal.PayrollOneServiceReference.PayFrequency PayFrequency {
            get {
                return this.PayFrequencyField;
            }
            set {
                if ((this.PayFrequencyField.Equals(value) != true)) {
                    this.PayFrequencyField = value;
                    this.RaisePropertyChanged("PayFrequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TaxablePay {
            get {
                return this.TaxablePayField;
            }
            set {
                if ((this.TaxablePayField.Equals(value) != true)) {
                    this.TaxablePayField = value;
                    this.RaisePropertyChanged("TaxablePay");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProcessPayrollAggregateResult", Namespace="http://schemas.datacontract.org/2004/07/PayrollOneService.API")]
    [System.SerializableAttribute()]
    public partial class ProcessPayrollAggregateResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpensePortal.PayrollOneServiceReference.ProcessPayrollResult[] ResultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureMessage {
            get {
                return this.FailureMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureMessageField, value) != true)) {
                    this.FailureMessageField = value;
                    this.RaisePropertyChanged("FailureMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpensePortal.PayrollOneServiceReference.ProcessPayrollResult[] Results {
            get {
                return this.ResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultsField, value) != true)) {
                    this.ResultsField = value;
                    this.RaisePropertyChanged("Results");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProcessPayrollResult", Namespace="http://schemas.datacontract.org/2004/07/PayrollOneService.API")]
    [System.SerializableAttribute()]
    public partial class ProcessPayrollResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeePayrollIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpensePortal.PayrollOneServiceReference.NetPaymentLine NetPaymentLineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeePayrollId {
            get {
                return this.EmployeePayrollIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeePayrollIdField, value) != true)) {
                    this.EmployeePayrollIdField = value;
                    this.RaisePropertyChanged("EmployeePayrollId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureMessage {
            get {
                return this.FailureMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureMessageField, value) != true)) {
                    this.FailureMessageField = value;
                    this.RaisePropertyChanged("FailureMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpensePortal.PayrollOneServiceReference.NetPaymentLine NetPaymentLine {
            get {
                return this.NetPaymentLineField;
            }
            set {
                if ((object.ReferenceEquals(this.NetPaymentLineField, value) != true)) {
                    this.NetPaymentLineField = value;
                    this.RaisePropertyChanged("NetPaymentLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NetPaymentLine", Namespace="http://schemas.datacontract.org/2004/07/PayrollOneService.API")]
    [System.SerializableAttribute()]
    public partial class NetPaymentLine : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double EESField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double EESNITDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ERSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExpensePortal.PayrollOneServiceReference.EmployeeCompanyId EmployeeCompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double GrossTDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double IncomeTaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double NetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProcessWeekField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SLRPaymentCurrentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TaxBasisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TaxCreditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TaxTDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TaxableGrossTDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double EES {
            get {
                return this.EESField;
            }
            set {
                if ((this.EESField.Equals(value) != true)) {
                    this.EESField = value;
                    this.RaisePropertyChanged("EES");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double EESNITD {
            get {
                return this.EESNITDField;
            }
            set {
                if ((this.EESNITDField.Equals(value) != true)) {
                    this.EESNITDField = value;
                    this.RaisePropertyChanged("EESNITD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ERS {
            get {
                return this.ERSField;
            }
            set {
                if ((this.ERSField.Equals(value) != true)) {
                    this.ERSField = value;
                    this.RaisePropertyChanged("ERS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExpensePortal.PayrollOneServiceReference.EmployeeCompanyId EmployeeCompanyId {
            get {
                return this.EmployeeCompanyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeCompanyIdField, value) != true)) {
                    this.EmployeeCompanyIdField = value;
                    this.RaisePropertyChanged("EmployeeCompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double GrossTD {
            get {
                return this.GrossTDField;
            }
            set {
                if ((this.GrossTDField.Equals(value) != true)) {
                    this.GrossTDField = value;
                    this.RaisePropertyChanged("GrossTD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double IncomeTax {
            get {
                return this.IncomeTaxField;
            }
            set {
                if ((this.IncomeTaxField.Equals(value) != true)) {
                    this.IncomeTaxField = value;
                    this.RaisePropertyChanged("IncomeTax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Net {
            get {
                return this.NetField;
            }
            set {
                if ((this.NetField.Equals(value) != true)) {
                    this.NetField = value;
                    this.RaisePropertyChanged("Net");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProcessWeek {
            get {
                return this.ProcessWeekField;
            }
            set {
                if ((this.ProcessWeekField.Equals(value) != true)) {
                    this.ProcessWeekField = value;
                    this.RaisePropertyChanged("ProcessWeek");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SLRPaymentCurrent {
            get {
                return this.SLRPaymentCurrentField;
            }
            set {
                if ((this.SLRPaymentCurrentField.Equals(value) != true)) {
                    this.SLRPaymentCurrentField = value;
                    this.RaisePropertyChanged("SLRPaymentCurrent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TaxBasis {
            get {
                return this.TaxBasisField;
            }
            set {
                if ((this.TaxBasisField.Equals(value) != true)) {
                    this.TaxBasisField = value;
                    this.RaisePropertyChanged("TaxBasis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxCode {
            get {
                return this.TaxCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxCodeField, value) != true)) {
                    this.TaxCodeField = value;
                    this.RaisePropertyChanged("TaxCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TaxCredit {
            get {
                return this.TaxCreditField;
            }
            set {
                if ((this.TaxCreditField.Equals(value) != true)) {
                    this.TaxCreditField = value;
                    this.RaisePropertyChanged("TaxCredit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TaxTD {
            get {
                return this.TaxTDField;
            }
            set {
                if ((this.TaxTDField.Equals(value) != true)) {
                    this.TaxTDField = value;
                    this.RaisePropertyChanged("TaxTD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TaxableGrossTD {
            get {
                return this.TaxableGrossTDField;
            }
            set {
                if ((this.TaxableGrossTDField.Equals(value) != true)) {
                    this.TaxableGrossTDField = value;
                    this.RaisePropertyChanged("TaxableGrossTD");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PayrollOneServiceReference.IPayrollOneService")]
    public interface IPayrollOneService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayrollOneService/GetPayrolls", ReplyAction="http://tempuri.org/IPayrollOneService/GetPayrollsResponse")]
        ExpensePortal.PayrollOneServiceReference.Payroll[] GetPayrolls(ExpensePortal.PayrollOneServiceReference.Company company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayrollOneService/GetPayrolls", ReplyAction="http://tempuri.org/IPayrollOneService/GetPayrollsResponse")]
        System.Threading.Tasks.Task<ExpensePortal.PayrollOneServiceReference.Payroll[]> GetPayrollsAsync(ExpensePortal.PayrollOneServiceReference.Company company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayrollOneService/Validate", ReplyAction="http://tempuri.org/IPayrollOneService/ValidateResponse")]
        ExpensePortal.PayrollOneServiceReference.EmployeeValidation[] Validate(ExpensePortal.PayrollOneServiceReference.Company company, ExpensePortal.PayrollOneServiceReference.Employee[] employees, string payrollDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayrollOneService/Validate", ReplyAction="http://tempuri.org/IPayrollOneService/ValidateResponse")]
        System.Threading.Tasks.Task<ExpensePortal.PayrollOneServiceReference.EmployeeValidation[]> ValidateAsync(ExpensePortal.PayrollOneServiceReference.Company company, ExpensePortal.PayrollOneServiceReference.Employee[] employees, string payrollDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayrollOneService/Persist", ReplyAction="http://tempuri.org/IPayrollOneService/PersistResponse")]
        ExpensePortal.PayrollOneServiceReference.EmployeeValidation[] Persist(ExpensePortal.PayrollOneServiceReference.Company company, string payrollDescription, ExpensePortal.PayrollOneServiceReference.Employee[] employees);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayrollOneService/Persist", ReplyAction="http://tempuri.org/IPayrollOneService/PersistResponse")]
        System.Threading.Tasks.Task<ExpensePortal.PayrollOneServiceReference.EmployeeValidation[]> PersistAsync(ExpensePortal.PayrollOneServiceReference.Company company, string payrollDescription, ExpensePortal.PayrollOneServiceReference.Employee[] employees);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayrollOneService/GetAll", ReplyAction="http://tempuri.org/IPayrollOneService/GetAllResponse")]
        ExpensePortal.PayrollOneServiceReference.Employee[] GetAll(bool includeLeavers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayrollOneService/GetAll", ReplyAction="http://tempuri.org/IPayrollOneService/GetAllResponse")]
        System.Threading.Tasks.Task<ExpensePortal.PayrollOneServiceReference.Employee[]> GetAllAsync(bool includeLeavers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayrollOneService/GetAllForCompany", ReplyAction="http://tempuri.org/IPayrollOneService/GetAllForCompanyResponse")]
        ExpensePortal.PayrollOneServiceReference.Employee[] GetAllForCompany(ExpensePortal.PayrollOneServiceReference.Company company, bool includeLeavers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayrollOneService/GetAllForCompany", ReplyAction="http://tempuri.org/IPayrollOneService/GetAllForCompanyResponse")]
        System.Threading.Tasks.Task<ExpensePortal.PayrollOneServiceReference.Employee[]> GetAllForCompanyAsync(ExpensePortal.PayrollOneServiceReference.Company company, bool includeLeavers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayrollOneService/GetAllForCompanyPayroll", ReplyAction="http://tempuri.org/IPayrollOneService/GetAllForCompanyPayrollResponse")]
        ExpensePortal.PayrollOneServiceReference.Employee[] GetAllForCompanyPayroll(ExpensePortal.PayrollOneServiceReference.Company company, string payrollDescription, bool includeLeavers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayrollOneService/GetAllForCompanyPayroll", ReplyAction="http://tempuri.org/IPayrollOneService/GetAllForCompanyPayrollResponse")]
        System.Threading.Tasks.Task<ExpensePortal.PayrollOneServiceReference.Employee[]> GetAllForCompanyPayrollAsync(ExpensePortal.PayrollOneServiceReference.Company company, string payrollDescription, bool includeLeavers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayrollOneService/PlaceEmployeesOnHoldExcept", ReplyAction="http://tempuri.org/IPayrollOneService/PlaceEmployeesOnHoldExceptResponse")]
        void PlaceEmployeesOnHoldExcept(ExpensePortal.PayrollOneServiceReference.EmployeeCompanyId[] exceptEmployees);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayrollOneService/PlaceEmployeesOnHoldExcept", ReplyAction="http://tempuri.org/IPayrollOneService/PlaceEmployeesOnHoldExceptResponse")]
        System.Threading.Tasks.Task PlaceEmployeesOnHoldExceptAsync(ExpensePortal.PayrollOneServiceReference.EmployeeCompanyId[] exceptEmployees);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayrollOneService/ProcessPayroll", ReplyAction="http://tempuri.org/IPayrollOneService/ProcessPayrollResponse")]
        ExpensePortal.PayrollOneServiceReference.ProcessPayrollAggregateResult ProcessPayroll(ExpensePortal.PayrollOneServiceReference.Company company, ExpensePortal.PayrollOneServiceReference.GrossPaymentLine[] grossPaymentLines, string payrollDescription, bool returnNetPaymentData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayrollOneService/ProcessPayroll", ReplyAction="http://tempuri.org/IPayrollOneService/ProcessPayrollResponse")]
        System.Threading.Tasks.Task<ExpensePortal.PayrollOneServiceReference.ProcessPayrollAggregateResult> ProcessPayrollAsync(ExpensePortal.PayrollOneServiceReference.Company company, ExpensePortal.PayrollOneServiceReference.GrossPaymentLine[] grossPaymentLines, string payrollDescription, bool returnNetPaymentData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayrollOneService/TestConnection", ReplyAction="http://tempuri.org/IPayrollOneService/TestConnectionResponse")]
        string TestConnection();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayrollOneService/TestConnection", ReplyAction="http://tempuri.org/IPayrollOneService/TestConnectionResponse")]
        System.Threading.Tasks.Task<string> TestConnectionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayrollOneService/GetCompanies", ReplyAction="http://tempuri.org/IPayrollOneService/GetCompaniesResponse")]
        ExpensePortal.PayrollOneServiceReference.Company[] GetCompanies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayrollOneService/GetCompanies", ReplyAction="http://tempuri.org/IPayrollOneService/GetCompaniesResponse")]
        System.Threading.Tasks.Task<ExpensePortal.PayrollOneServiceReference.Company[]> GetCompaniesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayrollOneService/CreateCompany", ReplyAction="http://tempuri.org/IPayrollOneService/CreateCompanyResponse")]
        void CreateCompany(ExpensePortal.PayrollOneServiceReference.Company company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayrollOneService/CreateCompany", ReplyAction="http://tempuri.org/IPayrollOneService/CreateCompanyResponse")]
        System.Threading.Tasks.Task CreateCompanyAsync(ExpensePortal.PayrollOneServiceReference.Company company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayrollOneService/ResetData", ReplyAction="http://tempuri.org/IPayrollOneService/ResetDataResponse")]
        void ResetData(ExpensePortal.PayrollOneServiceReference.Company company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPayrollOneService/ResetData", ReplyAction="http://tempuri.org/IPayrollOneService/ResetDataResponse")]
        System.Threading.Tasks.Task ResetDataAsync(ExpensePortal.PayrollOneServiceReference.Company company);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPayrollOneServiceChannel : ExpensePortal.PayrollOneServiceReference.IPayrollOneService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PayrollOneServiceClient : System.ServiceModel.ClientBase<ExpensePortal.PayrollOneServiceReference.IPayrollOneService>, ExpensePortal.PayrollOneServiceReference.IPayrollOneService {
        
        public PayrollOneServiceClient() {
        }
        
        public PayrollOneServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PayrollOneServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PayrollOneServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PayrollOneServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ExpensePortal.PayrollOneServiceReference.Payroll[] GetPayrolls(ExpensePortal.PayrollOneServiceReference.Company company) {
            return base.Channel.GetPayrolls(company);
        }
        
        public System.Threading.Tasks.Task<ExpensePortal.PayrollOneServiceReference.Payroll[]> GetPayrollsAsync(ExpensePortal.PayrollOneServiceReference.Company company) {
            return base.Channel.GetPayrollsAsync(company);
        }
        
        public ExpensePortal.PayrollOneServiceReference.EmployeeValidation[] Validate(ExpensePortal.PayrollOneServiceReference.Company company, ExpensePortal.PayrollOneServiceReference.Employee[] employees, string payrollDescription) {
            return base.Channel.Validate(company, employees, payrollDescription);
        }
        
        public System.Threading.Tasks.Task<ExpensePortal.PayrollOneServiceReference.EmployeeValidation[]> ValidateAsync(ExpensePortal.PayrollOneServiceReference.Company company, ExpensePortal.PayrollOneServiceReference.Employee[] employees, string payrollDescription) {
            return base.Channel.ValidateAsync(company, employees, payrollDescription);
        }
        
        public ExpensePortal.PayrollOneServiceReference.EmployeeValidation[] Persist(ExpensePortal.PayrollOneServiceReference.Company company, string payrollDescription, ExpensePortal.PayrollOneServiceReference.Employee[] employees) {
            return base.Channel.Persist(company, payrollDescription, employees);
        }
        
        public System.Threading.Tasks.Task<ExpensePortal.PayrollOneServiceReference.EmployeeValidation[]> PersistAsync(ExpensePortal.PayrollOneServiceReference.Company company, string payrollDescription, ExpensePortal.PayrollOneServiceReference.Employee[] employees) {
            return base.Channel.PersistAsync(company, payrollDescription, employees);
        }
        
        public ExpensePortal.PayrollOneServiceReference.Employee[] GetAll(bool includeLeavers) {
            return base.Channel.GetAll(includeLeavers);
        }
        
        public System.Threading.Tasks.Task<ExpensePortal.PayrollOneServiceReference.Employee[]> GetAllAsync(bool includeLeavers) {
            return base.Channel.GetAllAsync(includeLeavers);
        }
        
        public ExpensePortal.PayrollOneServiceReference.Employee[] GetAllForCompany(ExpensePortal.PayrollOneServiceReference.Company company, bool includeLeavers) {
            return base.Channel.GetAllForCompany(company, includeLeavers);
        }
        
        public System.Threading.Tasks.Task<ExpensePortal.PayrollOneServiceReference.Employee[]> GetAllForCompanyAsync(ExpensePortal.PayrollOneServiceReference.Company company, bool includeLeavers) {
            return base.Channel.GetAllForCompanyAsync(company, includeLeavers);
        }
        
        public ExpensePortal.PayrollOneServiceReference.Employee[] GetAllForCompanyPayroll(ExpensePortal.PayrollOneServiceReference.Company company, string payrollDescription, bool includeLeavers) {
            return base.Channel.GetAllForCompanyPayroll(company, payrollDescription, includeLeavers);
        }
        
        public System.Threading.Tasks.Task<ExpensePortal.PayrollOneServiceReference.Employee[]> GetAllForCompanyPayrollAsync(ExpensePortal.PayrollOneServiceReference.Company company, string payrollDescription, bool includeLeavers) {
            return base.Channel.GetAllForCompanyPayrollAsync(company, payrollDescription, includeLeavers);
        }
        
        public void PlaceEmployeesOnHoldExcept(ExpensePortal.PayrollOneServiceReference.EmployeeCompanyId[] exceptEmployees) {
            base.Channel.PlaceEmployeesOnHoldExcept(exceptEmployees);
        }
        
        public System.Threading.Tasks.Task PlaceEmployeesOnHoldExceptAsync(ExpensePortal.PayrollOneServiceReference.EmployeeCompanyId[] exceptEmployees) {
            return base.Channel.PlaceEmployeesOnHoldExceptAsync(exceptEmployees);
        }
        
        public ExpensePortal.PayrollOneServiceReference.ProcessPayrollAggregateResult ProcessPayroll(ExpensePortal.PayrollOneServiceReference.Company company, ExpensePortal.PayrollOneServiceReference.GrossPaymentLine[] grossPaymentLines, string payrollDescription, bool returnNetPaymentData) {
            return base.Channel.ProcessPayroll(company, grossPaymentLines, payrollDescription, returnNetPaymentData);
        }
        
        public System.Threading.Tasks.Task<ExpensePortal.PayrollOneServiceReference.ProcessPayrollAggregateResult> ProcessPayrollAsync(ExpensePortal.PayrollOneServiceReference.Company company, ExpensePortal.PayrollOneServiceReference.GrossPaymentLine[] grossPaymentLines, string payrollDescription, bool returnNetPaymentData) {
            return base.Channel.ProcessPayrollAsync(company, grossPaymentLines, payrollDescription, returnNetPaymentData);
        }
        
        public string TestConnection() {
            return base.Channel.TestConnection();
        }
        
        public System.Threading.Tasks.Task<string> TestConnectionAsync() {
            return base.Channel.TestConnectionAsync();
        }
        
        public ExpensePortal.PayrollOneServiceReference.Company[] GetCompanies() {
            return base.Channel.GetCompanies();
        }
        
        public System.Threading.Tasks.Task<ExpensePortal.PayrollOneServiceReference.Company[]> GetCompaniesAsync() {
            return base.Channel.GetCompaniesAsync();
        }
        
        public void CreateCompany(ExpensePortal.PayrollOneServiceReference.Company company) {
            base.Channel.CreateCompany(company);
        }
        
        public System.Threading.Tasks.Task CreateCompanyAsync(ExpensePortal.PayrollOneServiceReference.Company company) {
            return base.Channel.CreateCompanyAsync(company);
        }
        
        public void ResetData(ExpensePortal.PayrollOneServiceReference.Company company) {
            base.Channel.ResetData(company);
        }
        
        public System.Threading.Tasks.Task ResetDataAsync(ExpensePortal.PayrollOneServiceReference.Company company) {
            return base.Channel.ResetDataAsync(company);
        }
    }
}
