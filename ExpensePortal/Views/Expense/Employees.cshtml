@model ExpensePortal.Models.ExpenditureViewModel

@{
    ViewBag.Title = "Employees";
}

<div class="row">

    <h1>Employees</h1>

    @using (Html.BeginForm("Employees", "Expense", FormMethod.Post))
    {
        <div class="field">
            @Html.LabelFor(m => m.ProductID)
            @Html.DropDownListFor(m => m.ProductID, Model.ProductItems, new { @class = "travel0" })

            @* TODO: Ajax-enable this and use Get *@
            <input id="filter" type="submit" value="Filter" />
        </div>
    }

    @{
        var employeeProductsAndRoles = Model.EmployeeProductsAndRoles;

        if (employeeProductsAndRoles.Any())
        {
            var date = DateTime.Now;
            int year = date.Year;
            int week = Model.GetIso8601WeekOfYear(date);

            const string SuperAdminRole = "Super Admin";
            const string AdminRole = "Admin";
            const string ApiRole = "API";
            
            <table>
                <thead>
                    <tr>
                        <th>First Name</th>
                        <th>Last Name</th>
                        <th>Email</th>
                        <th>Payroll Number</th>
                        @*<th>Roles</th>*@
                        <th>Expenditures</th>
                    </tr>
                </thead>
                <tbody>
                @foreach (var employeeProductAndRole in employeeProductsAndRoles)
                {
                    var employee = employeeProductAndRole.Employee;
                    var firstName = employee.FirstName;
                    var lastName = employee.LastName;
                    var email = employee.Email;

                    var productPayrolls = employeeProductAndRole.ProductPayrolls;
                    //var roles = employeeProductAndRole.Roles.Select(role => role.Description).ToList();

                    //bool isSuperAdminRole = roles.Any(role => role == SuperAdminRole);
                    //bool isAdminRole = roles.Any(role => role == AdminRole);
                    //bool isApiRole = roles.Any(role => role == ApiRole);

                    foreach (var productPayroll in productPayrolls)
                    {
                        var productName = productPayroll.ProductName;
                        var payrollNumber = productPayroll.PayrollNumber;
                        var routeValues = Model.GetRouteValues(payrollNumber, year, week, productName);

                        <tr>
                            <td>@firstName</td>
                            <td>@lastName</td>
                            <td>@email</td>
                            <td align="right">@payrollNumber &nbsp;&nbsp;</td>
                            @*<td>
                                TODO: For now make these read-only, subsequently Ajax-enable
                                <label for="@SuperAdminRole">@SuperAdminRole</label>
                                @Html.CheckBox(@SuperAdminRole, @isSuperAdminRole, new { @disabled = "disabled" })
                                <label for="@AdminRole">@AdminRole</label>
                                @Html.CheckBox(@AdminRole, @isAdminRole, new { @disabled = "disabled" })
                                <label for="@ApiRole">@ApiRole</label>
                                @Html.CheckBox(@ApiRole, @isApiRole, new { @disabled = "disabled" })
                            </td>*@
                            <td>@Html.ActionLink("Records of Expenditure", "Expenditure", "Expense", routeValues, htmlAttributes: null)</td>
                        </tr>
                    }
                }
                </tbody>
            </table>
        }
    }
</div>
@section scripts
{
    <script src="~/Scripts/product.js"></script>
}